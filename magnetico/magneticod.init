#!/bin/bash
### BEGIN INIT INFO
# Provides:          magneticod
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starts magneticod
# Description:       Starts magneticod.
### END INIT INFO

# Author: Jesper Smith
# Edited by MarkusMcNugen [MarkusMcNugen/docker-qBittorrentvpn]
# Edited log paths for docker, added umask and group to chuid option

# Edited by DyonR [DyonR/docker-magnetico-environment]
# Revamped so it works for magneticod/w

# Edit the user that magneticod will run as.
USER=$(id -u)
GROUP=$(id -g)

PATH="/sbin:/usr/sbin:/bin:/usr/bin"
SCRIPTNAME="/etc/init.d/magneticod"
NAME="magneticod"
DESC="magneticod"
PIDFILE="/var/run/$NAME.pid"
MAGNETICODLOGPATH="/opt/magnetico/Logs/"
MAGNETICODLOG="magneticod.txt"

DAEMON="/opt/magnetico/magneticod"
DAEMON_ARGS=$magneticod_args
DAEMONSTRING="$DAEMON $DAEMON_ARGS >> $MAGNETICODLOGPATH$MAGNETICODLOG 2>&1"

export DBUS_SESSION_BUS_ADDRESS=""

umask 002

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.0-6) to ensure that this file is present.
. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
do_start()
{
	# Check if log path exists. If it doesn't exist, create it.
	if [ ! -e $MAGNETICODLOGPATH ]; then
		mkdir -p $MAGNETICODLOGPATH
		chown -R ${PUID}:${PGID} /opt/magnetico
	fi
	
	# Check for log file. If it doesn't exist, create it.
	if [ -f $MAGNETICODLOGPATH$MAGNETICODLOG ]; then
		echo "[INFO] Logging to $MAGNETICODLOGPATH$MAGNETICODLOG." | ts '%Y-%m-%d %H:%M:%.S'
	else
		echo "[INFO] Log file $MAGNETICODLOGPATH$MAGNETICODLOG doesn't exist. Creating it..." | ts '%Y-%m-%d %H:%M:%.S'
		touch $MAGNETICODLOGPATH$MAGNETICODLOG
		if [ -f $MAGNETICODLOGPATH$MAGNETICODLOG ]; then
			chown $USER:$GROUP $MAGNETICODLOGPATH$MAGNETICODLOG
				echo "[INFO] Logfile created. Logging to $MAGNETICODLOGPATH$MAGNETICODLOG" | ts '%Y-%m-%d %H:%M:%.S'
			else
				echo "[WARNING] Couldn't create logfile $MAGNETICODLOGPATH$MAGNETICODLOG. Please investigate." | ts '%Y-%m-%d %H:%M:%.S'
		fi
	fi

	# Return
	#   0 if daemon has been started
	#   1 if daemon was already running
	#   2 if daemon could not be started

	start-stop-daemon --start --chuid $USER:$GROUP --test --quiet --make-pidfile --pidfile $PIDFILE --background --exec /bin/bash -- -c "$DAEMONSTRING" || return 1
	start-stop-daemon --start --chuid $USER:$GROUP --make-pidfile --pidfile $PIDFILE --background --exec /bin/bash -- -c "$DAEMONSTRING" || return 2
	sleep 1
	echo "[INFO] magneticod daemon started successfully..." | ts '%Y-%m-%d %H:%M:%.S'
}

#
# Function that stops the daemon/service
#
do_stop()
{
	start-stop-daemon --stop --exec "$DAEMONPATH$DAEMON"
	sleep 2
	return "$?"
}

case "$1" in
  start)
	[ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
	do_start
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  stop)
	[ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  status)
       status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
       ;;
  restart|force-reload)
	log_daemon_msg "Restarting $DESC" "$NAME"
	do_stop
	case "$?" in
	  0|1)
		do_start
		case "$?" in
			0) log_end_msg 0 ;;
			1) log_end_msg 1 ;; # Old process is still running
			*) log_end_msg 1 ;; # Failed to start
		esac
		;;
	  *)
	  	# Failed to stop
		log_end_msg 1
		;;
	esac
	;;
  *)
	#echo "Usage: $SCRIPTNAME {start|stop|restart|reload|force-reload}" >&2
	echo "Usage: service magneticod {start|stop|status|restart|force-reload}" >&2
	exit 3
	;;
esac